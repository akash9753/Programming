server.js

const express = require('express')
const bodyParser = require('body-parser')


//list of routers
const routerUser = require('./routes/user')
const routerNote = require('./routes/note')

const app = express()

app.use(bodyParser.json())

//add the routers
app.use('/user',routerUser)
app.use('/user',routerNote)

app.listen(4000, '0.0.0.0', ()=>{
    console.log('server strated on port 4000')
})

-----------------------------------------------------
db.js
const mysql = require('mysql2')

const pool = mysql.createPool({
        host:'localhost',
        user:'root',
        password: '123456789',
        database:'mean_03',
        port:3306,
        waitForConnections: true,
        connectionLimit: 10,
        queueLimit: 0
    })
  
    module.exports = pool
------------------------------------------------------------------------------------
user.js

const express = require('express')
const cryptoJs = require('crypto-js')
const db = require('../db')
const utils = require('../utils')
const mailer = require('../mailer')


const router = express.Router()

// /user/register
router.post('/register',(request, response)=>{
    //console.log(request.body)
    
       const{firstName, lastName, email, password, mobile} = request.body
      // console.log(`${firstName}`)
       
       const encryptedPassword = cryptoJs.MD5(password)
       const statement = `insert into user(firstname, lastname,email,password,mobile)
       values('${firstName}','${lastName}','${email}','${encryptedPassword}','${mobile}')`
       
       db.query(statement,(error,dbResult)=>{
           const result = {}
           if(error){
               console.log(`error:${error}`)
               result['status'] = 'error'
               result['error'] = error
               response.send(result)
           }else{
            
            const subject = `Welcome to Motion Soft Pvt Ltd`
            const body = `
            <h1>Welcome to Motion Soft Pvt Ltd</h1>
            <h2>Registration Successful </h2>
            <h2>Pls Login</h2>`
            mailer.sendEmail(email,subject,body, (emailError,info) =>{
                result['status'] = 'success'
                result['data'] = dbResult
                console.log(`result:`,result)
                response.send(result)
                console.log(emailError)
                console.log(info)
            })

            
           }
           
       })
       
})

router.post('/login',(request,response)=>{
    const {email, password} = request.body
     const encryptedPassword = cryptoJs.MD5(password)
     const statement = `select * from user where email = '${email}' and password = '${encryptedPassword}'`
    db.query(statement, (error, users)=>{
        if(error){
            response.send(error)
        }else{
         if(users.length == 0){
            response.send({status: 'error', error:error} )
         }else{
            response.send({status: 'success', data:users} )
         }
        }
        
    })
})

router.get('/',(request,response)=>{
    const statement = `select * from user`
    db.query(statement, (error, users)=>{
        if(error){
            response.send('error occure')
        }else{
            response.send(users)
         }
        
        
    })
})

module.exports = router
-----------------------------------------------------------------------------------------
utils.js
function sendSuccess(data){
    return{
        status: 'success',
        data:data
    }
}

function sendError(error){
    return{
        status: 'error',
        error:error
    }
}

function sendResult(error, data){
    if(error){
        return sendError(error)
    }else{
        return sendSuccess(data)
    }
}
module.exports= {
    sendSuccess:sendSuccess,
    sendError:sendError,
    sendResult:sendResult
}
---------------------------------------------------------------------------------



                    <p>Gender</p>
                      <div class="form-group">
                       <div class="form-check">
                           <input [(ngModel)]="gender" type="radio" type="radio" name="gender" 
                            value="male" >
                           <label for="form-check-label" for="gender">Male</label>
                       </div>
                       <div class="form-check">
                        <input [(ngModel)]="gender" type="radio" type="radio" name="gender" 
                         value="female" >
                        <label for="form-check-label" for="gender">Female</label>
                    </div>
                      <h4>u have choosen:{{gender}}</h4>
                      </div>